#!/bin/sh

#
# Copyright Stefano Fornari (C) 2013. All rights reserved.
#
# This script is meant to be ran by both command line and daemontools. Note that
# it requires daemontools to be installed (sudo apt-get install daemontools)
#

scriptname=$(basename $0)
scriptdir=$(cd $(dirname $0) && pwd)
home=$(dirname "$scriptdir")

. "$scriptdir/scriptutils"

#
# If JAVA_HOME points to a jdk, it is taken to launch the client, otherwise the
# java command in the path is used.
#
set_java
set_classpath "$home/lib"

cd "$home"

#
# Default configuration (use conf/falco.conf to customize)
#
JAVA_OPTS=
LOG_OPTS="-Djava.util.logging.config.file=$home/conf/logging.properties"

#
# JMX configuration
# -----------------
#
# Uncomment as needed
#
#JMX_OPTS="-Dcom.sun.management.jmxremote"
#JMX_OPTS="$JMX_OPTS -Dcom.sun.management.jmxremote.port=9010"
#JMX_OPTS="$JMX_OPTS -Dcom.sun.management.jmxremote.rmi.port=9010"
#JMX_OPTS="$JMX_OPTS -Dcom.sun.management.jmxremote.local.only=false"
#JMX_OPTS="$JMX_OPTS -Dcom.sun.management.jmxremote.authenticate=false"
#JMX_OPTS="$JMX_OPTS -Dcom.sun.management.jmxremote.ssl=false"
#JMX_OPTS="$JMX_OPTS -Djava.rmi.server.hostname=$(hostname).local"

SERVICE_USER_ID=pi
CURRENT_USER_ID=$(id -u -n)
if [ $CURRENT_USER_ID = "root" ]
then
  uidcmd="setuidgid $SERVICE_USER_ID"
else
  SERVICE_USER_ID=$CURRENT_USER_ID
fi

#
# Load a custom configuration (if any) overwriting the default values above
#
load_config $scriptname

if [ "$1" = "--help" ]
then
  $uidcmd $javacmd $JAVA_OPTS "$LOG_OPTS" ste.falco.ui.FalcoCLI "$@"
  exit
fi

#echo $uidcmd $javacmd $JAVA_OPTS "$LOG_OPTS" ste.falco.ui.FalcoCLI "$@"
nohup $uidcmd $javacmd $JAVA_OPTS $JMX_OPTS "$LOG_OPTS" ste.falco.ui.FalcoCLI "$@" > "$home/logs/output.log"
